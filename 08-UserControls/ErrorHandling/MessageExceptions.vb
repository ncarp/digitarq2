
#Region "License Agreement"

'* DigitArq
'* Copyright 2007-2015 
'* Arquivo Distrital do Porto
'* Todos os direitos reservados.
'*  
'* Este software foi desenvolvido pelo Arquivo
'* Distrital do Porto (http://www.adporto.pt)
'* em articulação com a Direcção-Geral de Arquivos
'* (http://www.dgarq.gov.pt) e com a coordenação
'* informática da Universidade do Minho
'* (http://www.uminho.pt).
'* O desenvolvimento deste produto foi parcialmente
'* financiado pelo Programa Operacional para a 
'* Cultura (POC) promovido pelo Governo Português.
'* ---------------------------------------------------
'*
'* A redistribuição e utilização deste produto sob a
'* forma de código-fonte ou programa compilado, com ou
'* sem modificações, é permitida desde que o seguinte
'* conjunto de condições seja cumprido:
'* 
'*	* Todas as redistribuições do código-fonte 
'*	  deste produto deverão ser acompanhadas do
'*	  texto que compõe esta licença, incluindo o 
'*	  texto inicial de atribuição de autoria,
'*	  esta lista de condições e do seguinte termo
'*	  de responsabilidade.
'*
'*	* Os nomes da Direcção-Geral de Arquivos,
'*	  do Arquivo Distrital do Porto, da 
'*	  Universidade do Minho e das pessoas 
'*	  individuais que colaboraram no desenvolvimento 
'*	  deste produto não deverão ser utilizados na 
'*	  promoção de produtos derivados deste 
'*	  sem que seja obtido consentimento prévio, por
'*	  escrito, por parte dos visados.

'*	* A utilização da designação DigitArq, seus 
'*	  logótipos e nomes institucionais associados
'*	  é apenas permitida em distribuições que sejam
'*	  cópias exactas da versão oficial deste produto
'*	  aprovada e/ou distribuída pela Direcção-Geral 
'*	  de Arquivos.

'*	* O desenvolvimento de obras derivadas deste
'*	  produto é permitido desde que a designação 
'*	  DigitArq, seus logotipos e parceiros 
'*	  institucionais não sejam utilizados em todo e
'*	  qualquer tipo de distribuição e/ou promoção 
'*	  da obra derivada.
'* 
'* ESTE SOFTWARE É DISTRIBUIDO PELA DIRECÇÃO-GERAL DE
'* ARQUIVOS "NO ESTADO EM QUE SE ENCONTRA" SEM QUALQUER
'* PRESUNÇÃO DE QUALIDADE OU GARANTIA ASSOCIADAS, 
'* INCLUINDO, MAS NÃO LIMITADO A, GARANTIAS ASSOCIADAS
'* A COMÉRCIO DE PRODUTOS OU DECLARAÇÃO DE ADEQUABILIDADE
'* A DETERMINADO FIM OU OBJECTIVO. 

'* EM NENHUMA CIRCUNSTÂNCIA PODERÁ A DIRECÇÃO-GERAL DE 
'* ARQUIVOS SER CONSIDERADA RESPONSÁVEL POR QUAISQUER 
'* DANOS QUE RESULTEM DA UTILIZAÇÃO DIRECTA, INDIRECTA,
'* ACIDENTAL, ESPECIAL OU DEMONSTRATIVA DESTE PRODUTO 
'* (INCLUINDO, MAS NÃO LIMITADO A, PERDAS DE DADOS, 
'* LUCROS, FALÊNCIA, INDEVIDA PRESTAÇÃO DE SERVIÇOS
'* OU NEGLIGÊNCIA), AINDA QUE O LICENCIANTE TENHA SIDO 
'* AVISADO DA POSSIBILIDADE DA OCORRÊNCIA DE TAIS DANOS.
'*
'* ---------------------------------------------------
'* Para mais informação sobre este produto ou a sua 
'* licença, é favor consultar o endereço electrónico
'* http://www.digitarq.pt

#End Region

Imports System.Data.SqlClient
Imports System.Configuration


Module MessageExceptions

    Public Function ErrorMessage(ByVal key As String) As String
        Try
            'Dim message As String = CType(ConfigurationSettings.GetConfig("errMessages"), Hashtable).Item(key)
            Dim message As String = CType(ConfigurationManager.GetSection("errMessages"), Hashtable).Item(key)
            Return message
        Catch ex As Exception
            Return "Cannot Load Configuration File!"
        End Try
    End Function


    Public Sub MsgBoxNetworkError()
        MsgBox(ErrorMessage("DatabaseAccess.Error"), MsgBoxStyle.Critical Or MsgBoxStyle.OKOnly)
    End Sub

    Public Sub MsgBoxCustomError(ByVal ErrorMessage As String)
        MsgBox(ErrorMessage, MsgBoxStyle.Critical Or MsgBoxStyle.OKOnly)
    End Sub


    Public Function MsgSqlException(ByVal ex As SqlException) As String
        Dim strError As New System.Text.StringBuilder

        If ex.Number = 511 Then ' record overflow error. Record size is limited to 8060 chars
            strError.Append(ErrorMessage("MsgBoxCustomError.RecordOverflow"))
        Else ' Generic error message
            strError.Append(ErrorMessage("MsgBoxCustomError.SqlException"))
            strError.Append(ControlChars.NewLine)
            strError.Append(ControlChars.NewLine)
            strError.Append(ErrorMessage("MsgBoxCustomError.AdvancedErrorDescription"))
            strError.Append(ControlChars.NewLine)
            strError.Append("Description: " & ex.Message)
            strError.Append(ControlChars.NewLine)
            strError.Append("Error type: " & ex.Number)
            strError.Append(ControlChars.NewLine)
            strError.Append("Server: " & ex.Server)
            strError.Append(ControlChars.NewLine)
            strError.Append("Source: " & ex.Source)
            strError.Append(ControlChars.NewLine)
            strError.Append("State: " & ex.State)
            strError.Append(ControlChars.NewLine)
            strError.Append("Method: " & ex.TargetSite.Name)
            strError.Append(ControlChars.NewLine)
            strError.Append("Stack trace: " & ex.StackTrace)
            strError.Append(ControlChars.NewLine)
        End If
        Return strError.ToString
    End Function

    Public Function MsgException(ByVal ex As Exception) As String
        Dim strError As New System.Text.StringBuilder

        If TypeOf ex Is SqlException Then
            strError.Append(MsgSqlException(ex))
        Else
            strError.Append(ErrorMessage("MsgBoxCustomError.Exception"))
            strError.Append(ControlChars.NewLine)
            strError.Append(ControlChars.NewLine)
            strError.Append(ErrorMessage("MsgBoxCustomError.AdvancedErrorDescription"))
            strError.Append(ControlChars.NewLine)
            strError.Append("Description: " & ex.Message)
            strError.Append(ControlChars.NewLine)
            strError.Append("Source: " & ex.Source)
            strError.Append(ControlChars.NewLine)
            strError.Append("Method: " & ex.TargetSite.Name)
            strError.Append(ControlChars.NewLine)
            strError.Append("Stack trace: " & ex.StackTrace)
            strError.Append(ControlChars.NewLine)
        End If
        Return strError.ToString
    End Function

End Module
