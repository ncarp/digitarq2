<?xml version="1.0" encoding="iso-8859-1"?><xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">	<!-- ***************************************************************************************** -->	<xsl:output method="text" version="1.0" encoding="iso-8859-1" indent="yes"/>	<!--	<xsl:include href="ead2cnf_elements.xslt"/> -->	<!-- ***************************************************************************************** -->	<xsl:template match="/">		<xsl:apply-templates select="/ead/archdesc"/>		<xsl:apply-templates select="//c"/>	</xsl:template>	<!-- ***************************************************************************************** -->	<xsl:template match="c | archdesc">		<xsl:call-template name="component"/>		<xsl:apply-templates/>	</xsl:template>	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<xsl:template name="component">:Component<xsl:call-template name="UnitId"/>		<xsl:call-template name="UnitTitle"/>		<xsl:call-template name="OtherLevel"/>		<xsl:call-template name="UnitDates"/>		<xsl:call-template name="Abstract"/>		<xsl:call-template name="AccessRestrict"/>		<xsl:call-template name="LegalStatus"/>		<xsl:call-template name="Dimensions"/>		<xsl:call-template name="PhysLoc"/>		<xsl:call-template name="LangMaterial"/>		<xsl:call-template name="ScopeContent"/>		<xsl:call-template name="BiogHist"/>		<xsl:call-template name="Note"/>		<xsl:call-template name="RelatedMaterial"/>		<xsl:call-template name="PhysTech"/>		<xsl:call-template name="MaterialSpec"/>		<xsl:call-template name="PhysFacet"/>		<xsl:call-template name="GenreForm"/>		<xsl:call-template name="Appraisal"/>		<xsl:call-template name="Accruals"/>		<xsl:call-template name="AcqInfo"/>		<xsl:call-template name="Arrangement"/>		<xsl:call-template name="Extent"/>		<xsl:call-template name="OriginationAuthor"/>		<xsl:call-template name="CatalogueStatus"/>		<xsl:call-template name="AltFormAvail"/>		<xsl:call-template name="OriginalsLoc"/>		<xsl:call-template name="CustodHist"/>		<xsl:call-template name="OtherFindAids"/>		<xsl:call-template name="GeogName"/>		<xsl:call-template name="MgtGroup"/>		<xsl:call-template name="Repository"/>		<xsl:call-template name="OriginalNumbering"/>		<xsl:call-template name="ProcessInfoName"/>		<xsl:call-template name="ProcessInfoDate"/>	</xsl:template>	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<xsl:template name="UseRestrict">		<xsl:if test="userestrict/p/text()">-ReprodnRightsConsentStatus<xsl:value-of select="userestrict/p/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="OriginalNumbering">		<xsl:if test="note[@label='numeracao_original']/p/text()">-UserText1<xsl:value-of select="note[@label='numeracao_original']/p/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="Repository">-RepositoryArquivo Distrital do Porto</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="MgtGroup">	<xsl:choose>		<xsl:when test="starts-with(did/unitid, 'PRQ')">-MgtGroupParoquiais</xsl:when>		<xsl:when test="starts-with(did/unitid, 'NOT')">-MgtGroupNotariais</xsl:when>		<xsl:when test="starts-with(did/unitid, 'JUD')">-MgtGroupJudiciais</xsl:when>		<xsl:when test="starts-with(did/unitid, 'MON')">-MgtGroupMonásticos</xsl:when>		<xsl:when test="starts-with(did/unitid, 'AC')">-MgtGroupAdministração Central</xsl:when>		<xsl:when test="starts-with(did/unitid, 'AL')">-MgtGroupAdministração Local</xsl:when>		<xsl:when test="starts-with(did/unitid, 'EMP')">-MgtGroupEmpresas</xsl:when>		<xsl:when test="starts-with(did/unitid, 'PSS')">-MgtGroupPessoais</xsl:when>		<xsl:when test="starts-with(did/unitid, 'FAM')">-MgtGroupFamílias	</xsl:when>		<xsl:when test="starts-with(did/unitid, 'DIO')">-MgtGroupDiocesanos</xsl:when>		<xsl:when test="starts-with(did/unitid, 'CON')">-MgtGroupConfrarias</xsl:when>		<xsl:when test="starts-with(did/unitid, 'ACD')">-MgtGroupAdministração Central Desconcentrada</xsl:when>		<xsl:when test="starts-with(did/unitid, 'ECL')">-MgtGroupEclesiásticos</xsl:when>	</xsl:choose></xsl:template>	<!-- **********************************************************************-->	<xsl:template name="GeogName">		<xsl:if test="did/physdesc/geogname/text()">-Location<xsl:value-of select="did/physdesc/geogname/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="OtherFindAids">		<xsl:if test="otherfindaid/p/text()">-FindingAids<xsl:value-of select="otherfindaid/p/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="CustodHist">		<xsl:if test="custodhist/p/text()">-CustodialHistory<xsl:value-of select="custodhist/p/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="OriginalsLoc">		<xsl:if test="originalsloc/p/text()">-Originals<xsl:value-of select="originalsloc/p/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="AltFormAvail">		<xsl:if test="altformavail/p/text()">-Copies<xsl:value-of select="altformavail/p/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="CatalogueStatus">-CatalogueStatusCatalogado</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="OriginationAuthor">		<xsl:if test="did/origination[@label='autor']/text()">-Author<xsl:value-of select="did/origination[@label='autor']/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="Arrangement">		<xsl:if test="arrangement/p/text()">-Arrangement<xsl:value-of select="arrangement/p/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="AcqInfo">		<xsl:if test="accruals/p/text()">-Acquisition<xsl:value-of select="acqinfo/p/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="Accruals">		<xsl:if test="accruals/p/text()">-Accruals<xsl:value-of select="accruals/p/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="LegalStatus">		<xsl:if test="accessrestrict/legalstatus/text()">-AccessConditions<xsl:value-of select="accessrestrict/legalstatus/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="AccessRestrict">		<xsl:if test="accessrestrict/p/text()">-AccessStatus<xsl:value-of select="accessrestrict/p/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="Extent">		<xsl:if test="did/physdesc/extent">			<xsl:variable name="pagina">				<xsl:value-of select="did/physdesc/extent[@unit='pagina']"/>			</xsl:variable>			<xsl:variable name="rolo">				<xsl:value-of select="did/physdesc/extent[@unit='rolo']"/>			</xsl:variable>			<xsl:variable name="ml">				<xsl:value-of select="did/physdesc/extent[@unit='ml']"/>			</xsl:variable>			<xsl:variable name="maco">				<xsl:value-of select="did/physdesc/extent[@unit='maco']"/>			</xsl:variable>			<xsl:variable name="macete">				<xsl:value-of select="did/physdesc/extent[@unit='macete']"/>			</xsl:variable>			<xsl:variable name="pasta">				<xsl:value-of select="did/physdesc/extent[@unit='pasta']"/>			</xsl:variable>			<xsl:variable name="capa">				<xsl:value-of select="did/physdesc/extent[@unit='capa']"/>			</xsl:variable>			<xsl:variable name="capilha">				<xsl:value-of select="did/physdesc/extent[@unit='capilha']"/>			</xsl:variable>			<xsl:variable name="caixa">				<xsl:value-of select="did/physdesc/extent[@unit='caixa']"/>			</xsl:variable>			<xsl:variable name="livro">				<xsl:value-of select="did/physdesc/extent[@unit='livro']"/>			</xsl:variable>			<xsl:variable name="outro">				<xsl:value-of select="did/physdesc/extent[@unit='outro']"/>			</xsl:variable>			<xsl:variable name="folha">				<xsl:value-of select="did/physdesc/extent[@unit='folha']"/>			</xsl:variable>-Extent<xsl:if test="$livro > 0">				<xsl:value-of select="$livro"/> livro(s); </xsl:if>			<xsl:if test="$rolo > 0">				<xsl:value-of select="$rolo "/> rolo(s); </xsl:if>			<xsl:if test="$ml> 0">				<xsl:value-of select="$ml"/> m/l; </xsl:if>			<xsl:if test="$maco> 0">				<xsl:value-of select="$maco"/> maço(s); </xsl:if>			<xsl:if test="$macete> 0">				<xsl:value-of select="$macete"/> macetes; </xsl:if>			<xsl:if test="$pasta> 0">				<xsl:value-of select="$pasta"/> pasta(s); </xsl:if>			<xsl:if test="$capa> 0">				<xsl:value-of select="$capa"/> capa(s); </xsl:if>			<xsl:if test="$capilha> 0">				<xsl:value-of select="$capilha"/> capilha(s); </xsl:if>			<xsl:if test="$caixa> 0">				<xsl:value-of select="$caixa"/> caixa(s); </xsl:if>			<xsl:if test="$livro> 0">				<xsl:value-of select="$livro"/> livro(s); </xsl:if>			<xsl:if test="$outro> 0">				<xsl:value-of select="$outro"/> outro(s); </xsl:if>			<xsl:if test="$folha> 0">				<xsl:value-of select="$folha"/> folha(s); </xsl:if>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="ProcessInfoDate">		<xsl:if test="processinfo/p/date/text()">-Created<xsl:value-of select="processinfo/p/date/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="ProcessInfoName">		<xsl:if test="processinfo/p/name/text()">-Creator<xsl:value-of select="processinfo/p/name/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="Appraisal">		<xsl:if test="appraisal/p/text()">-Appraisal<xsl:value-of select="appraisal/p/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="PhysTech">		<xsl:if test="phystech/p/text()">-Condition<xsl:value-of select="phystech/p/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="MaterialSpec">		<xsl:if test="did/materialspec/text()">-PhysicalDescription<xsl:value-of select="did/materialspec/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="PhysFacet">		<xsl:if test="did/physdesc/physfacet/text()">-Category<xsl:value-of select="did/physdesc/physfacet/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="GenreForm">		<xsl:if test="did/physdesc/genreform/text()">-Format<xsl:value-of select="did/physdesc/genreform/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="RelatedMaterial">		<xsl:if test="relatedmaterial/p/text()">-RelatedMaterial<xsl:value-of select="relatedmaterial/p/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="Note">		<xsl:if test="note[@label='observacoes']/p/text()">-Notes<xsl:value-of select="note[@label='observacoes']/p/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="BiogHist">		<xsl:if test="bioghist/p/text()">-AdminHistory<xsl:value-of select="bioghist/p/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="ScopeContent">		<xsl:if test="scopecontent/p/text()">-Description<xsl:value-of select="scopecontent/p/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="LangMaterial">		<xsl:if test="did/langmaterial/text()">-Language<xsl:value-of select="did/langmaterial/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="PhysLoc">		<xsl:if test="did/physloc/text()">-Location<xsl:value-of select="did/physloc/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="Dimensions">		<xsl:if test="did/physdesc/dimensions/text()">-Dimensions<xsl:value-of select="did/physdesc/dimensions/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="OtherLevel">		<xsl:if test="@otherlevel">-Level<xsl:choose>				<xsl:when test="@otherlevel= 'D'">Documento Simples</xsl:when>				<xsl:when test="@otherlevel= 'DC'">Documento Composto</xsl:when>				<xsl:when test="@otherlevel= 'UI'">Unidade de instalação</xsl:when>				<xsl:when test="@otherlevel= 'SR'">Série</xsl:when>				<xsl:when test="@otherlevel= 'SSR'">SubSérie</xsl:when>				<xsl:when test="@otherlevel= 'SSSC'">SubSubSecção</xsl:when>				<xsl:when test="@otherlevel= 'SSC'">SubSecção</xsl:when>				<xsl:when test="@otherlevel= 'SC'">Secção</xsl:when>				<xsl:when test="@otherlevel= 'SF'">Subfundo</xsl:when>				<xsl:when test="@otherlevel= 'F'">Fundo</xsl:when>			</xsl:choose>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="Abstract">		<xsl:if test="did/abstract/text()">-Abstract<xsl:value-of select="did/abstract/text()"/>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="UnitId">		<xsl:if test="did/unitid/text()">-RefNoPT-ADPRT/<xsl:for-each select="ancestor-or-self::*[@otherlevel]">				<xsl:choose>					<xsl:when test="@otherlevel='F'">						<xsl:value-of select="concat(substring-before(did/unitid, '/'), '-', substring-after(did/unitid, '/'))"/>					</xsl:when>					<xsl:otherwise>						<xsl:choose>							<xsl:when test="@otherlevel='SF' or @otherlevel='SSC' or @otherlevel='SSSC' or @otherlevel='SSR'">/</xsl:when>							<xsl:otherwise>/</xsl:otherwise>						</xsl:choose>						<xsl:value-of select="did/unitid"/>					</xsl:otherwise>				</xsl:choose>			</xsl:for-each>		</xsl:if>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="UnitTitle">			<xsl:choose>				<xsl:when test="did/unittitle/@type='atribuido'">-Title<xsl:value-of select="did/unittitle/text()"/>-AssignedTitle<xsl:value-of select="did/unittitle/text()"/>				</xsl:when>				<xsl:otherwise>-Title<xsl:value-of select="did/unittitle/text()"/>				</xsl:otherwise>			</xsl:choose>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="UnitDates">-Date<xsl:if test="did/unitdate[@datechar='criacao_inicial']/@certainty = 'no'">c. </xsl:if>		<xsl:call-template name="UnitDateInitial"/>-<xsl:if test="did/unitdate[@datechar='criacao_final']/@certainty = 'no'">c. </xsl:if>		<xsl:call-template name="UnitDateFinal"/>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="UnitDateInitial">		<xsl:variable name="iyear">			<xsl:value-of select="substring-before(did/unitdate[@datechar='criacao_inicial'], '-')"/>		</xsl:variable>		<xsl:variable name="imonth">			<xsl:value-of select="substring-before(substring-after(did/unitdate[@datechar='criacao_inicial'], '-'), '-')"/>		</xsl:variable>		<xsl:variable name="iday">			<xsl:value-of select="substring-after(substring-after(did/unitdate[@datechar='criacao_inicial'], '-'), '-')"/>		</xsl:variable>		<xsl:choose>			<xsl:when test="$iday = '00' or $imonth = '00'">				<xsl:value-of select="$iyear"/>			</xsl:when>			<xsl:otherwise>				<xsl:value-of select="$iday"/>/<xsl:value-of select="$imonth"/>/<xsl:value-of select="$iyear"/>			</xsl:otherwise>		</xsl:choose>	</xsl:template>	<!-- **********************************************************************-->	<xsl:template name="UnitDateFinal">		<xsl:variable name="fyear">			<xsl:value-of select="substring-before(did/unitdate[@datechar='criacao_final'], '-')"/>		</xsl:variable>		<xsl:variable name="fmonth">			<xsl:value-of select="substring-before(substring-after(did/unitdate[@datechar='criacao_final'], '-'), '-')"/>		</xsl:variable>		<xsl:variable name="fday">			<xsl:value-of select="substring-after(substring-after(did/unitdate[@datechar='criacao_final'], '-'), '-')"/>		</xsl:variable>		<xsl:choose>			<xsl:when test="$fday = '00' or $fmonth = '00'">				<xsl:value-of select="$fyear"/>			</xsl:when>			<xsl:otherwise>				<xsl:value-of select="$fday"/>/<xsl:value-of select="$fmonth"/>/<xsl:value-of select="$fyear"/>			</xsl:otherwise>		</xsl:choose>	</xsl:template>	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<!-- **********************************************************************-->	<xsl:template match="*">	</xsl:template>	<!-- **********************************************************************--></xsl:stylesheet>